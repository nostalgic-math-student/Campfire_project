/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { DAO, DAOInterface } from "../../../contracts/DAO.sol/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aiTrainer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "datasetHash",
        type: "string",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [],
    name: "aiTrainer",
    outputs: [
      {
        internalType: "contract IAITrainer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_datasetHash",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "string",
        name: "datasetHash",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ac7380380610ac783398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610a34806100936000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063013cf08b146100715780630d61b5191461009d57806365e481e2146100b05780639ad023b7146100c3575b600080fd5b61006f61006a3660046105e8565b6100ee565b005b61008461007f3660046105e8565b6101d3565b6040516100949493929190610647565b60405180910390f35b61006f6100ab3660046105e8565b61032b565b61006f6100be366004610728565b610500565b6001546100d6906001600160a01b031681565b6040516001600160a01b039091168152602001610094565b600054811061013c5760405162461bcd60e51b815260206004820152601560248201527450726f70756573746120696e6578697374656e746560581b60448201526064015b60405180910390fd5b6000818154811061014f5761014f61078c565b60009182526020822060016004909202010180549161016d836107b8565b9190505550807f84a5508ca0d85b42a876e75a9126f3ae7b43617ce60b170bf8805d34630bc654600083815481106101a7576101a761078c565b9060005260206000209060040201600101546040516101c891815260200190565b60405180910390a250565b600081815481106101e357600080fd5b9060005260206000209060040201600091509050806000018054610206906107d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610232906107d1565b801561027f5780601f106102545761010080835404028352916020019161027f565b820191906000526020600020905b81548152906001019060200180831161026257829003601f168201915b50505050600183015460028401546003850180549495929460ff9092169350906102a8906107d1565b80601f01602080910402602001604051908101604052809291908181526020018280546102d4906107d1565b80156103215780601f106102f657610100808354040283529160200191610321565b820191906000526020600020905b81548152906001019060200180831161030457829003601f168201915b5050505050905084565b60005481106103745760405162461bcd60e51b815260206004820152601560248201527450726f70756573746120696e6578697374656e746560581b6044820152606401610133565b600081815481106103875761038761078c565b600091825260209091206002600490920201015460ff16156103da5760405162461bcd60e51b815260206004820152600c60248201526b596120656a6563757461646160a01b6044820152606401610133565b6001600082815481106103ef576103ef61078c565b906000526020600020906004020160020160006101000a81548160ff021916908315150217905550807f537137e7fc21556269dc66003ff063d7ee0ce98cf05ad2feddda124690976e956000838154811061044c5761044c61078c565b906000526020600020906004020160030160405161046a9190610888565b60405180910390a2600154600080546001600160a01b039092169163db65a42b9184918290811061049d5761049d61078c565b90600052602060002090600402016003016040518363ffffffff1660e01b81526004016104cb9291906108a2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b5050505050565b60408051608081018252838152600060208201819052918101829052606081018390528154600181018355918052805190916004027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019081906105649082610912565b5060208201516001820155604082015160028201805460ff19169115159190911790556060820151600382019061059b9082610912565b50506000546105ad91506001906109d2565b7f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e432836040516105dc91906109eb565b60405180910390a25050565b6000602082840312156105fa57600080fd5b5035919050565b6000815180845260005b818110156106275760208185018101518683018201520161060b565b506000602082860101526020601f19601f83011685010191505092915050565b60808152600061065a6080830187610601565b8560208401528415156040840152828103606084015261067a8185610601565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106ac57600080fd5b813567ffffffffffffffff808211156106c7576106c7610685565b604051601f8301601f19908116603f011681019082821181831017156106ef576106ef610685565b8160405283815286602085880101111561070857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561073b57600080fd5b823567ffffffffffffffff8082111561075357600080fd5b61075f8683870161069b565b9350602085013591508082111561077557600080fd5b506107828582860161069b565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016107ca576107ca6107a2565b5060010190565b600181811c908216806107e557607f821691505b60208210810361080557634e487b7160e01b600052602260045260246000fd5b50919050565b60008154610818816107d1565b808552602060018381168015610835576001811461084f5761087d565b60ff1985168884015283151560051b88018301955061087d565b866000528260002060005b858110156108755781548a820186015290830190840161085a565b890184019650505b505050505092915050565b60208152600061089b602083018461080b565b9392505050565b8281526040602082015260006108bb604083018461080b565b949350505050565b601f82111561090d57600081815260208120601f850160051c810160208610156108ea5750805b601f850160051c820191505b81811015610909578281556001016108f6565b5050505b505050565b815167ffffffffffffffff81111561092c5761092c610685565b6109408161093a84546107d1565b846108c3565b602080601f831160018114610975576000841561095d5750858301515b600019600386901b1c1916600185901b178555610909565b600085815260208120601f198616915b828110156109a457888601518255948401946001909101908401610985565b50858210156109c25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156109e5576109e56107a2565b92915050565b60208152600061089b602083018461060156fea26469706673582212204a7705a049e54f78b222213be7fe80c17617e76a5e0dbbf0e786b0ff288df63764736f6c63430008140033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _aiTrainer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_aiTrainer, overrides || {});
  }
  override deploy(
    _aiTrainer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_aiTrainer, overrides || {}) as Promise<
      DAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DAO__factory {
    return super.connect(runner) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new Interface(_abi) as DAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DAO {
    return new Contract(address, _abi, runner) as unknown as DAO;
  }
}
